# Generated by Django 4.2 on 2023-06-13 12:41

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ArqRemessa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('arquivo', models.FileField(upload_to='remessas')),
            ],
        ),
        migrations.CreateModel(
            name='Colaboradores',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('nome_guerra', models.CharField(max_length=50)),
                ('funcao', models.CharField(choices=[('OPERADOR', 'OPERADOR'), ('AJUDANTE', 'AJUDANTE'), ('MOTORISTA VUC', 'MOTORISTA VUC'), ('MOTORISTA MÉDIO', 'MOTORISTA MÉDIO'), ('MOTORISTA PESADO', 'MOTORISTA PESADO'), ('MOTORISTA MONITOR', 'MOTORISTA MONITOR')], max_length=20)),
                ('status', models.CharField(choices=[('DISPONÍVEL', 'DISPONÍVEL'), ('EM ROTA', 'EM ROTA'), ('FÉRIAS', 'FÉRIAS'), ('AFASTADO', 'AFASTADO'), ('ATESTADO', 'ATESTADO'), ('FOLGA', 'FOLGA')], default='DISPONÍVEL', max_length=20)),
                ('periodo', models.CharField(blank=True, max_length=10, null=True)),
                ('horas', models.CharField(blank=True, max_length=90, null=True)),
                ('tempo_s', models.FloatField(blank=True)),
                ('status1', models.CharField(choices=[('NULO', ' NULO'), ('POSITIVO', 'POSITIVO'), ('NEGATIVO', 'NEGATIVO')], default='NULO', max_length=20)),
                ('empresa', models.CharField(choices=[('IPIRANGA', 'IPIRANGA'), ('SHELL', 'SHELL')], default='IPIRANGA', max_length=20)),
                ('observacoes', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Escala',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField(default=datetime.datetime.utcnow)),
                ('remessa', models.CharField(max_length=100)),
                ('frota', models.IntegerField()),
                ('placa', models.CharField(max_length=10)),
                ('tipo_carga', models.CharField(max_length=5)),
                ('peso', models.IntegerField()),
                ('entregas', models.IntegerField(default=0)),
                ('distancia', models.IntegerField(default=0)),
                ('motorista', models.CharField(max_length=30)),
                ('ajudante', models.CharField(max_length=30)),
                ('viagem', models.CharField(max_length=3)),
                ('status', models.CharField(default='EM ENTREGA', max_length=10)),
                ('observacao', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Remessa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('remessa', models.CharField(max_length=10)),
                ('placa', models.CharField(max_length=10)),
                ('peso', models.IntegerField(default=0)),
                ('categoria', models.CharField(default='N/D', max_length=10)),
                ('entregas', models.IntegerField(default=0)),
                ('distancia', models.IntegerField(default=0)),
                ('status', models.CharField(default='DISPONÍVEL', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Frota',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.IntegerField()),
                ('imagem', models.ImageField(default='padrão.png', upload_to='foto_frota')),
                ('placa', models.CharField(max_length=8)),
                ('tipo', models.CharField(max_length=20)),
                ('bau', models.CharField(max_length=20)),
                ('capacidade', models.IntegerField()),
                ('status', models.CharField(choices=[('DISPONÍVEL', 'DISPONÍVEL'), ('EM ROTA', 'EM ROTA'), ('MANUTENÇÃO', 'MANUTENÇÃO')], default='DISPONÍVEL', max_length=10)),
                ('empresa', models.CharField(choices=[('IPIRANGA', 'IPIRANGA'), ('SHELL', 'SHELL')], default='IPIRANGA', max_length=10)),
                ('motorista', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='colaboradores', to='IAs.colaboradores')),
            ],
        ),
    ]
